@model Fate.Backoffice.Models.OrderRequest
@using MvcPaging

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .form-inline label {

    }

    .form-inline input {
        margin: 5px 8px;
    }
</style>

<!-- Begin Page Content -->
<div class="container-fluid">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">訂單列表</h1>
    </div>

    <div class="row">
        <div class="col-12">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-inline" }))
            {
                <label for="Name">姓名:</label>
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                <label for="Email">Email:</label>
                @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
                <label for="ContactPhone">電話號碼:</label>
                @Html.TextBoxFor(x => x.ContactPhone, new { @class = "form-control" })

                <button type="submit" class="btn btn-primary">搜尋</button>
            }
        </div>
    </div>

    <div class="row">
        <div class="table-responsive col-12">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>訂單編號</th>
                        <th>姓名</th>
                        <th>性別</th>
                        <th>Email</th>
                        <th>IP</th>
                        <th>聯絡地址</th>
                        <th>連絡電話</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Orders)
                    {
                        <tr>
                            <td>@item.OrderId</td>
                            <td>@item.Name</td>
                            <td>@(item.Gender.HasValue ? item.Gender.Value ? "男" : "女" : "未輸入")</td>
                            <td>@item.Email</td>
                            <td>@item.IPAddress</td>
                            <td>@item.ContactAddress</td>
                            <td>@item.ContactPhone</td>
                            <td>
                                <button class="btn btn-primary detailBtn" data-id="@item.OrderId" data-toggle="modal" data-target="#myModal">詳細</button>
                            </td>
                        </tr>
                        }
                </tbody>
            </table>

            <div class="pager">
                @Html.Pager(Model.Orders.PageSize, Model.Orders.PageNumber, Model.Orders.TotalItemCount)
                @Model.Orders.ItemStart - @Model.Orders.ItemEnd of @Model.Orders.TotalItemCount item(s)
            </div>
        </div>
    </div>
</div>

<!-- The Modal -->
<div class="modal" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title" id="Title"></h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body" id="DetailContent">
               
            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>

<!-- /.container-fluid -->

@section Scripts
{
    <script>
        $(function () {
             var _pageLinkers = $(".pager> a");

            _pageLinkers.each(function (i, item) {
                var page = getParameterByName($(item).attr('href'), 'page')
                $(item).attr('href', '#').click(function () { postPage(page); });
            });
            
            function getParameterByName(url,name) {
                name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                    results = regex.exec(url);
                return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            function postPage(page) {
                if ($("form")[0].size() > 0) {
                    $('<input>')
                        .attr({ type: 'hidden', id: 'page', name: 'page', value: page })
                        .appendTo($(targetFormID));
                    $("form")[0].submit();
                }
            };

            $(".detailBtn").click(function () {
                var loaderElm = '<div class="loader"></div>';
                $("#DetailContent").html(loaderElm);
                var id = $(this).data('id');

                $.ajax({
                    type: "GET",
                    async: true,
                    url: '@Url.Action("Detail", "Order")?id=' + id,
                    success: function (result) {
                        $("#DetailContent").html(result);
                    }
                });
            });
        });
    </script>
}